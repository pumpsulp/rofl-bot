import asyncio
import random

import discord
from discord.commands import Option
from discord.commands import slash_command
from discord.ext import commands

# import config
from Database import Database
from config import services_prices, commands_cooldown, icons_urls


async def add_rofl(ctx, member, seconds):
    try:
        rofl_role = discord.utils.get(ctx.guild.roles, name='Rofl')
        await member.add_roles(rofl_role)
        await asyncio.sleep(seconds)
        await member.remove_roles(rofl_role)
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤ cogs/rofl_commands.py –≤ —Ñ—É–Ω–∫—Ü–∏–∏ add_rofl: {e}')


async def move_to_chulan(ctx, member):
    try:
        chulan = discord.utils.get(ctx.guild.channels, name='–ß—É–ª–∞–Ω')
        if chulan is None:
            await ctx.guild.create_voice_channel(name='–ß—É–ª–∞–Ω',
                                                 overwrites={
                                                     ctx.guild.default_role: discord.PermissionOverwrite(
                                                         view_channel=False)
                                                 })

        await member.move_to(chulan)

    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤ move_to_chulan: {e}')


class Rofl(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @slash_command(name='–∫—Ç–æ', description='–°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è —á—Ç–æ-—Ç–æ –æ –∫–æ–º-—Ç–æ, –∞ —è –≤–∞–º –æ—Ç–≤–µ—á—É!')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __guess_who(self,
                          ctx,
                          what: Option(str, '–ß—Ç–æ?', required=True)
                          ):
        """–£–≥–∞–¥–∞–π–∫–∞"""

        try:
            await ctx.defer()
            users = [user for user in ctx.guild.members if user.bot is False]
            await ctx.respond(f'–Ø –¥—É–º–∞—é, —á—Ç–æ **{what}** —ç—Ç–æ {random.choice(users).mention} üòè',
                              allowed_mentions=discord.AllowedMentions(everyone=True))
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/rofl_commands –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __guess_who: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')

    @slash_command(name='–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å', description='–°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ —á–µ–º-—Ç–æ, —è —Å–∫–∞–∂—É, —Å –∫–∞–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —ç—Ç–æ –ø—Ä–∞–≤–¥–∞!')
    @commands.cooldown(1, 1, commands.BucketType.user)
    async def __probability_who(self,
                                ctx,
                                what: Option(str, '–ß—Ç–æ?', required=True)
                                ):
        """–£–≥–∞–¥–∞–π–∫–∞ —Ç–æ–∫ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏"""

        try:
            await ctx.defer()
            await ctx.respond(f'–Ø —É–≤–µ—Ä–µ–Ω, —á—Ç–æ **{what}** –Ω–∞ **{random.randint(0, 101)}%** ü§î')
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/rofl_commands –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __probability_who: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!')

    @slash_command(name='–∑–∞—Ä–æ—Ñ–ª–∏—Ç—å',
                   description=f'–ó–∞—Ä–æ—Ñ–ª–∏—Ç–µ –∫–æ–≥–æ-—Ç–æ –ø–æ —Ç–∞—Ä–∏—Ñ—É 1 –º–∏–Ω—É—Ç–∞ - {services_prices["rofl_per_minute"]} –≥–µ–º–∞')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __rofl(self,
                     ctx,
                     user: Option(discord.User, required=True),
                     time: Option(int, '–í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö', required=True)
                     ):
        """–í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ "rofl_role_name" –Ω–∞ –≤—Ä–µ–º—è"""

        db = Database()
        try:
            await ctx.defer()

            for role in user.roles:
                if role.name == 'Rofl':
                    await ctx.respond(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{user.name}** —É–∂–µ –∑–∞—Ä–æ—Ñ–ª–µ–Ω!')
                    db.close_connection()
                    return

            cur_balance = db.get_balance(ctx.guild, ctx.author)
            price = time * services_prices["rofl_per_minute"]

            if cur_balance < price:
                await ctx.respond("–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", ephemeral=True)
            else:
                db.add_cash(ctx.guild, ctx.author, -price)

                embed = discord.Embed(title='**–≠—Ç–æ Rofls!**',
                                      description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{ctx.author.name}** –∑–∞—Ä–æ—Ñ–ª–∏–ª {user.mention} –Ω–∞ **{time}** –º–∏–Ω!',
                                      colour=discord.Colour.brand_red())
                embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                await ctx.respond(embed=embed)

                await add_rofl(ctx, user, time * 60)

            db.close_connection()

        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ __rofl: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()

    @slash_command(name='—á—É–ª–∞–Ω',
                   description=f'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–≥–æ-–Ω–∏—Ç—å –≤ –ß—É–ª–∞–Ω –∑–∞ {services_prices["chulan"]} –≥–µ–º–æ–≤')
    @commands.cooldown(1, commands_cooldown['chulan'], commands.BucketType.user)
    async def __chulan(self,
                       ctx,
                       user: Option(discord.User, required=True)
                       ):
        """–†–æ—Ñ–ª –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '–ß—É–ª–∞–Ω' """

        db = Database()
        try:
            await ctx.defer()
            if not user.voice:
                await ctx.respond(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{user.name}** –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!', ephemeral=True)
                return

            cur_balance = db.get_balance(ctx.guild, ctx.author)
            price = services_prices["chulan"]

            if cur_balance < price:
                await ctx.respond("–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", ephemeral=True)
            else:
                db.add_cash(ctx.guild, ctx.author, -price)

                embed = discord.Embed(title='**–≠—Ç–æ Rofls!**',
                                      description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å **{ctx.author.name}** –æ—Ç–ø—Ä–∞–≤–∏–ª {user.mention} –≤ **–ß—É–ª–∞–Ω**!',
                                      colour=discord.Colour.from_rgb(139, 69, 19))
                embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                await ctx.respond(embed=embed)

                await move_to_chulan(ctx, user)

            db.close_connection()

        except Exception as e:
            print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ chulan: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()

    @slash_command(name='0_0',
                   description=f'–°—Ç–∞–Ω—å—Ç–µ –≤—Å–µ–≤–∏–¥—è—â–∏–º –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ ...')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __vision(self,
                       ctx
                       ):
        """–†–æ—Ñ–ª –∫–æ–º–∞–Ω–¥–∞ –º—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è """
        db = Database()
        try:
            await ctx.defer()

            for role in ctx.author.roles:
                if role.name == '–í—Å–µ–≤–∏–¥—è—â–∏–π':
                    await ctx.respond('–í—ã —É–∂–µ –≤—Å–µ–≤–∏–¥—è—â–∏–π!', ephemeral=True)
                    db.close_connection()
                    return

            cur_balance = db.get_balance(ctx.guild, ctx.author)
            price = services_prices["vision"]

            if cur_balance < price:
                await ctx.respond(f"–ß—Ç–æ–±—ã —Å—Ç–∞—Ç—å –≤—Å–µ–≤–∏–¥—è—â–∏–º –Ω—É–∂–Ω–æ {price} üíé", ephemeral=True)

            else:
                # db.add_cash(ctx.guild, ctx.author, -price)

                embed = discord.Embed(title='**Ultra Omega Rofl was happened!**',
                                      description=f'\n@everyone\n\n**{ctx.author.name}** —Å—Ç–∞–ª **–í–°–ï–í–ò–î–Ø–©–ò–ú** üëÅÔ∏è!',
                                      colour=discord.Colour.nitro_pink())
                embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                embed.set_image(url=icons_urls['hellsing'])

                await ctx.respond(embed=embed, allowed_mentions=discord.AllowedMentions(everyone=True))
                await ctx.author.add_roles(discord.utils.get(ctx.guild.roles, name='–í—Å–µ–≤–∏–¥—è—â–∏–π'))

            db.close_connection()

        except Exception as e:
            print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ vision: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()


def setup(bot):
    bot.add_cog(Rofl(bot))
