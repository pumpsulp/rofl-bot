import random
from collections import Counter

import discord
from discord.commands import Option
from discord.commands import slash_command
from discord.ext import commands

from Database import Database
from config import commands_cooldown


class Dice(commands.Converter):

    async def convert(self, ctx, argument):
        try:
            prediction = [int(item) for item in argument.split(sep=' ')]

            # –ï—Å–ª–∏ –≤ –ø—Ä–µ–¥–∏–∫—Ç–µ –±–æ–ª—å—à–µ 5 —á–∏—Å–µ–ª
            if len(prediction) > 5:
                return None

            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –ø—Ä–µ–¥–∏–∫—Ç —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ —á–∏—Å–ª–∞–º–∏ ("1 1 2" –∏–ª–∏ "3 4 3 5")
            # –ò–ª–∏ —á–∏—Å–ª–æ –≤ –ø—Ä–µ–¥–∏–∫—Ç–µ –º–µ–Ω—å—à–µ 1 / –±–æ–ª—å—à–µ 6
            predict_count = Counter(prediction)
            for key, val in predict_count.items():
                if val != 1:
                    return None
                if key < 1 or key > 6:
                    return None

            return prediction
        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ class Dice: {e}')
            return None


class Game(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @slash_command(name='–º–æ–Ω–µ—Ç–∫–∞', description='–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __coinflip(self,
                         ctx,
                         bet: Option(int, "–°—Ç–∞–≤–∫–∞", min_value=1, required=True),
                         prediction: Option(str, "–û—Ä—ë–ª –∏–ª–∏ –†–µ—à–∫–∞", choices=['–û—Ä—ë–ª', '–†–µ—à–∫–∞'], required=True)
                         ):
        """–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –º–æ–Ω–µ—Ç–∫–∏"""

        db = Database()
        try:
            await ctx.defer()
            user_balance = db.get_balance(ctx.guild, ctx.author)

            if user_balance < bet:
                await ctx.respond('–£ –≤–∞—Å **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤** –¥–ª—è —Ç–∞–∫–æ–π —Å—Ç–∞–≤–∫–∏!', ephemeral=True)

            else:
                result = random.choice(['–û—Ä—ë–ª', '–†–µ—à–∫–∞'])

                if result == prediction:
                    db.add_cash(ctx.guild, ctx.author, bet)
                    db.add_statistics(ctx.guild, ctx.author, 'coin', 'win', bet)
                    embed = discord.Embed(title='**–ë—Ä–æ—Å–æ–∫ –º–æ–Ω–µ—Ç–∫–∏** :coin: ',
                                          description=f'–ü—Ä–µ–¥–∏–∫—Ç: **{prediction}**\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: **{result}**\n–í—ã–∏–≥—Ä—ã—à: **{bet}** üíé',
                                          colour=discord.Colour.brand_green())
                    embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                    await ctx.respond(embed=embed)

                else:
                    db.add_cash(ctx.guild, ctx.author, -bet)
                    db.add_statistics(ctx.guild, ctx.author, 'coin', 'lose', -bet)
                    embed = discord.Embed(title='**–ë—Ä–æ—Å–æ–∫ –º–æ–Ω–µ—Ç–∫–∏** :coin: ',
                                          description=f'–ü—Ä–µ–¥–∏–∫—Ç: **{prediction}**\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: **{result}**\n–ü—Ä–æ–µ–±–∞–Ω–æ: **{bet}** üíé',
                                          colour=discord.Colour.dark_red())
                    embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                    await ctx.respond(embed=embed)

            db.close_connection()

        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/game.py –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __coinflip: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()

    @slash_command(name='–∫—É–±–∏–∫', description='–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __dice(self,
                     ctx,
                     bet: Option(int, description="–°—Ç–∞–≤–∫–∞", min_value=1, required=True),
                     predict: Option(Dice,
                                     description="–ü—Ä–æ–≥–Ω–æ–∑ (–≤–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 6 —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª)",
                                     required=True)
                     ):
        """–ü–æ–¥–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –∏–≥—Ä–∞–ª—å–Ω–æ–π –∫–æ—Å—Ç–∏"""

        db = Database()
        try:
            await ctx.defer()
            # –ï—Å–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–µ–¥–∏–∫—Ç
            if predict is None:
                await ctx.respond(f'–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π **–ø—Ä–æ–≥–Ω–æ–∑**!', ephemeral=True)
                return

            user_balance = db.get_balance(ctx.guild, ctx.author)

            # –ï—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏
            if user_balance < bet:
                await ctx.respond('–£ –≤–∞—Å **–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤** –¥–ª—è —Ç–∞–∫–æ–π —Å—Ç–∞–≤–∫–∏!', ephemeral=True)
            # –ï—Å–ª–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞ –µ—Å—Ç—å
            else:
                result = random.choice([1, 2, 3, 4, 5, 6])
                str_predict = ''.join(str(x) + ' ' for x in predict)
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∏–≥—Ä–∞–ª
                if result in predict:
                    loot = int(bet * 6 / len(predict)) - bet
                    db.add_cash(ctx.guild, ctx.author, loot)
                    db.add_statistics(ctx.guild, ctx.author, 'dice', 'win', loot)

                    embed = discord.Embed(title='**–ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞** :game_die: ',
                                          description=f'–ü—Ä–µ–¥–∏–∫—Ç: **{str_predict}**\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: **{result}**\n–í—ã–∏–≥—Ä—ã—à: **{loot}** üíé',
                                          colour=discord.Colour.brand_green())
                    embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                    await ctx.respond(embed=embed)
                # –ï—Å–ª–∏ –ø—Ä–æ–∏–≥—Ä–∞–ª
                else:
                    db.add_cash(ctx.guild, ctx.author, -bet)
                    db.add_statistics(ctx.guild, ctx.author, 'dice', 'lose', -bet)

                    embed = discord.Embed(title='**–ë—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–∞**  :game_die: ',
                                          description=f'–ü—Ä–µ–¥–∏–∫—Ç: **{str_predict}**\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞: **{result}**\n–ü—Ä–æ–µ–±–∞–Ω–æ: **{bet}** üíé',
                                          colour=discord.Colour.dark_red())
                    embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                    await ctx.respond(embed=embed)

            db.close_connection()

        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/game.py –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __dice: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()

    @slash_command(name='—Ä—É—Å—Å–∫–∞—è_—Ä—É–ª–µ—Ç–∫–∞',
                   description='–°—ã–≥—Ä–∞–π –≤ —Ä—É—Å—Å–∫—É—é —Ä—É–ª–µ—Ç–∫—É! –ü–æ–ª—É—á–∏ x2 –±–∞–ª–∞–Ω—Å–∞ –∏–ª–∏ –ø–æ—Ç–µ—Ä—è–π –≤—Å—ë –±–æ–≥–∞—Ç—Å—Ç–≤–æ!')
    @commands.cooldown(1, commands_cooldown['russian_roulette'], commands.BucketType.user)
    async def __russian_roulette(self, ctx):
        """–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –∏–ª–∏ —É–¥–≤–∞–∏–≤–∞–µ—Ç –µ–≥–æ"""

        db = Database()
        try:
            await ctx.defer()
            user_balance = db.get_balance(ctx.guild, ctx.author)
            if user_balance == 0:
                await ctx.respond(f'–£ —Ç–µ–±—è –Ω–µ—Ç—É –¥–µ–Ω–µ–≥, –¥—Ä—É–∂–∏—â–µ!', ephemeral=True)
            else:
                result = random.choice([0, 0, 1, 0, 0, 0])
                if result:
                    embed = discord.Embed(title='**Omega Rofl was happened**',
                                          description=f'@everyone\n{ctx.author.name} —Å—ã–≥—Ä–∞–ª –≤ –†—É—Å—Å–∫—É—é –†—É–ª–µ—Ç–∫—É –∏ **–ø–æ—Ç–µ—Ä—è–ª –≤—Å–µ —Å–≤–æ–∏ —Å–±–µ—Ä–µ–∂–µ–Ω–∏—è**!',
                                          colour=discord.Colour.dark_red())
                    embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                    db.add_cash(ctx.guild, ctx.author, -user_balance)
                    await ctx.respond(embed=embed, allowed_mentions=discord.AllowedMentions(everyone=True))

                else:
                    embed = discord.Embed(title='**Rofl was happened**',
                                          description=f'@everyone\n{ctx.author.name} —Å—ã–≥—Ä–∞–ª –≤ –†—É—Å—Å–∫—É—é –†—É–ª–µ—Ç–∫—É –∏ **—É–≤–µ–ª–∏—á–∏–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å –≤ –¥–≤–∞ —Ä–∞–∑–∞**!',
                                          colour=discord.Colour.green())
                    embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                    db.add_cash(ctx.guild, ctx.author, + user_balance)
                    await ctx.respond(embed=embed, allowed_mentions=discord.AllowedMentions(everyone=True))

            db.close_connection()
        except Exception as e:
            db.close_connection()
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/game.py: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)


def setup(bot):
    bot.add_cog(Game(bot))
