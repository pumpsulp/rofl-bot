import discord
from discord.commands import Option
from discord.commands import slash_command
from discord.ext import commands

# import config
from Database import Database
from config import commands_cooldown, kit_prices, icons_urls


def get_user_statistics(ctx, user):
    """–°—á–∏—Ç–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–æ–Ω–µ—Ç–∫–µ, –∫—É–±–∏–∫–µ –∏ –æ–±—â—É—é"""

    db = Database()
    try:
        coin_win, coin_lose, coin_networth = db.get_statistics(ctx.guild, user, 'coin')
        dice_win, dice_lose, dice_networth = db.get_statistics(ctx.guild, user, 'dice')

        coin_winrate = round((coin_win / (coin_lose + coin_win + 0.0001)) * 100, 1)
        dice_winrate = round((dice_win / (dice_lose + dice_win + 0.0001)) * 100, 1)
        total_winrate = round((dice_win + coin_win) / (dice_win + coin_win + dice_lose + coin_lose + 0.0001) * 100, 1)

        db.close_connection()
        return coin_win, coin_lose, coin_networth, coin_winrate, dice_win, dice_lose, dice_networth, dice_winrate, total_winrate

    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤ cogs/economics –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_user_statistics: {e}')
        db.close_connection()
        return None


class Economics(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @slash_command(name='–±–∞–ª–∞–Ω—Å', description='–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __balance(self,
                        ctx,
                        member: Option(discord.Member, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=True) = None
                        ):
        """–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

        db = Database()
        try:
            await ctx.defer(ephemeral=True)
            # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–æ –≤—ã–≤–æ–¥–∏–º –±–∞–ª–∞–Ω—Å —Ç–æ–≥–æ, –∫—Ç–æ –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É
            if member is None:
                await ctx.respond(embed=discord.Embed(
                    description=f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author.name}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{db.get_balance(ctx.guild, ctx.author)}** üíé""",
                    colour=discord.Colour.green()),
                    ephemeral=True)
            # –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–∞–ª–∞–Ω—Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            else:
                await ctx.respond(embed=discord.Embed(
                    description=f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member.name}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{db.get_balance(ctx.guild, member)}** üíé""",
                    colour=discord.Colour.green()),
                    ephemeral=True)

            db.close_connection()

        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/economics.py –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __balance: {e}')
            db.close_connection()

    @slash_command(name='–ø–µ—Ä–µ–¥–∞—Ç—å', description='–ü–µ—Ä–µ–¥–∞—á–∞ –¥–µ–Ω—è–∫')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __give(self,
                     ctx,
                     member: Option(discord.Member, "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", required=True),
                     amount: Option(int, "–î–µ–Ω—å–≥–∏", required=True)
                     ):
        """–ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω—è–∫. member, amount - –∫–æ–º—É –∏ –∫–æ–ª-–≤–æ."""

        db = Database()
        try:
            await ctx.defer()
            # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Å—É–º–º–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è
            if amount <= 0:
                gif = 'https://images-ext-2.discordapp.net/external/LpasM5XrQtK9gubFjkaqfYprpPpjU6WakDArZEzbYFg/%3Fsize%3D48%26quality%3Dlossless/https/cdn.discordapp.com/emojis/964469248946761788.gif'
                await ctx.respond(gif, ephemeral=True)
            # –ò–ª–∏ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
            elif db.get_balance(ctx.guild, ctx.author) < amount:
                await ctx.respond(f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞!', ephemeral=True)
            # –ï—Å–ª–∏ –≤—Å—ë –æ–∫
            else:
                db.add_cash(ctx.guild, ctx.author, -amount)  # –û—Ç–Ω–∏–º–∞–µ–º —É —Ç–æ–≥–æ, –∫—Ç–æ –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É
                db.add_cash(ctx.guild, member, amount)  # –ü–µ—Ä–µ–≤–æ–¥–∏–º —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                embed = discord.Embed(title='**Rofl was happened!**',
                                      description=f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {ctx.author.name} –ø–µ—Ä–µ–≤–µ–ª {member.mention} **{amount}** üíé',
                                      colour=discord.Colour.blue())
                embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')

                await ctx.respond(embed=embed,
                                  allowed_mentions=discord.AllowedMentions())

            db.close_connection()

        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/economics.py –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __give: {e}')
            db.close_connection()

    @slash_command(name='–∫–∏—Ç—Å—Ç–∞—Ä—Ç', description='–ü–æ–ª—É—á–∏ –∫–∏—Ç —Å—Ç–∞—Ä—Ç')
    @commands.cooldown(1, commands_cooldown['kit_start'], commands.BucketType.user)
    async def kit_start(self, ctx):
        """–í—ã–¥–∞–µ—Ç –∫–∏—Ç —Å—Ç–∞—Ä—Ç —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏"""

        db = Database()
        try:
            await ctx.defer()
            db.add_cash(ctx.guild, ctx.author, kit_prices['start'])
            embed = discord.Embed(title='**Rofl was happened**',
                                  description=f'{ctx.author.name} –∑–∞–ª—É—Ç–∞–ª **–∫–∏—Ç —Å—Ç–∞—Ä—Ç** –≤ —Ä–∞–∑–º–µ—Ä–µ {kit_prices["start"]} üíé',
                                  colour=discord.Colour.dark_blue())
            embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
            await ctx.respond(embed=embed)
            db.close_connection()

        except Exception as e:
            print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ kit_start: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()

    @slash_command(name='–∫–∏—Ç–ø—Ä–µ–º–∏—É–º', description='–ü–æ–ª—É—á–∏ –∫–∏—Ç –ø—Ä–µ–º–∏—É–º')
    @commands.cooldown(1, commands_cooldown['kit_premium'], commands.BucketType.user)
    async def kit_premium(self, ctx):
        """–í—ã–¥–∞–µ—Ç –∫–∏—Ç –ø—Ä–µ–º–∏—É–º —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é"""

        db = Database()
        try:
            await ctx.defer()
            db.add_cash(ctx.guild, ctx.author, kit_prices['premium'])
            embed = discord.Embed(title='**Rofl was happened**',
                                  description=f'{ctx.author.name} –∑–∞–ª—É—Ç–∞–ª **–∫–∏—Ç –ø—Ä–µ–º–∏—É–º** –≤ —Ä–∞–∑–º–µ—Ä–µ {kit_prices["premium"]} üíé',
                                  colour=discord.Colour.nitro_pink())
            embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
            await ctx.respond(embed=embed)
            db.close_connection()

        except Exception as e:
            print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ kit_premium: {e}')
            await ctx.respond('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!', ephemeral=True)
            db.close_connection()

    @slash_command(name='—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', description='–ü–æ–∫–∞–∑–∞—Ç—å –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
    @commands.cooldown(1, commands_cooldown['default'], commands.BucketType.user)
    async def __statistics(self, ctx, member: Option(discord.Member, "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", required=False) = None):
        """–í—ã–≤–æ–¥–∏—Ç –∏–≥—Ä–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""

        try:
            await ctx.defer()
            # –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É —Ç–æ–≥–æ, –∫—Ç–æ –≤—ã–∑–≤–∞–ª –∫–æ–º–∞–Ω–¥—É
            if member is None:
                coin_win, coin_lose, coin_networth, coin_winrate, dice_win, dice_lose, dice_networth, dice_winrate, total_winrate = get_user_statistics(
                    ctx,
                    ctx.author)

                embed = discord.Embed(title=f'**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞** –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{ctx.guild}** :bar_chart: ',
                                      colour=discord.Colour.dark_theme())
                embed.set_author(name=f'{ctx.author.name}', icon_url=f'{ctx.author.display_avatar}')
                embed.add_field(name='**–ú–æ–Ω–µ—Ç–∫–∞** :coin:',
                                value=f'–í—Å–µ–≥–æ –∏–≥—Ä: {coin_win + coin_lose}\n–ü–æ–±–µ–¥: {coin_win}\n–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {coin_lose}\n–í–∏–Ω—Ä–µ–π—Ç: {coin_winrate}%\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {coin_networth} üíé')
                embed.add_field(name='**–ö—É–±–∏–∫** :game_die:',
                                value=f'–í—Å–µ–≥–æ –∏–≥—Ä: {dice_win + dice_lose}\n–ü–æ–±–µ–¥: {dice_win}\n–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {dice_lose}\n–í–∏–Ω—Ä–µ–π—Ç: {dice_winrate}%\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {dice_networth} üíé')
                embed.add_field(name='**–û–±—â–∞—è —Å—Ç–∞—Ç–∞** :globe_with_meridians: ',
                                value=f'–í—Å–µ–≥–æ –∏–≥—Ä: {dice_win + dice_lose + coin_win + coin_lose}\n–ü–æ–±–µ–¥: {dice_win + coin_win}\n–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {dice_lose + coin_lose}\n–í–∏–Ω—Ä–µ–π—Ç: {total_winrate}%\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {dice_networth + coin_networth} üíé')
                embed.set_image(url=icons_urls['berserk'])
                await ctx.respond(embed=embed)
            else:
                coin_win, coin_lose, coin_networth, coin_winrate, dice_win, dice_lose, dice_networth, dice_winrate, total_winrate = get_user_statistics(
                    ctx,
                    member)

                embed = discord.Embed(title=f'**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild}** :bar_chart: ',
                                      colour=discord.Colour.dark_theme())
                embed.set_author(name=f'{member.name}', icon_url=f'{member.display_avatar}')
                embed.add_field(name='**–ú–æ–Ω–µ—Ç–∫–∞** :coin:',
                                value=f'–í—Å–µ–≥–æ –∏–≥—Ä: {coin_win + coin_lose}\n–ü–æ–±–µ–¥: {coin_win}\n–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {coin_lose}\n–í–∏–Ω—Ä–µ–π—Ç: {coin_winrate}%\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {coin_networth} üíé')
                embed.add_field(name='**–ö—É–±–∏–∫** :game_die:',
                                value=f'–í—Å–µ–≥–æ –∏–≥—Ä: {dice_win + dice_lose}\n–ü–æ–±–µ–¥: {dice_win}\n–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {dice_lose}\n–í–∏–Ω—Ä–µ–π—Ç: {dice_winrate}%\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {dice_networth} üíé')
                embed.add_field(name='**–û–±—â–∞—è —Å—Ç–∞—Ç–∞** :globe_with_meridians: ',
                                value=f'–í—Å–µ–≥–æ –∏–≥—Ä: {dice_win + dice_lose + coin_win + coin_lose}\n–ü–æ–±–µ–¥: {dice_win + coin_win}\n–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {dice_lose + coin_lose}\n–í–∏–Ω—Ä–µ–π—Ç: {total_winrate}%\n–ó–∞—Ä–∞–±–æ—Ç–æ–∫: {dice_networth + coin_networth} üíé')
                embed.set_image(url=icons_urls['berserk'])
                await ctx.respond(embed=embed)

        except Exception as e:
            await ctx.respond(f'–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!', ephemeral=True)
            print(f'–û—à–∏–±–∫–∞ –≤ cogs/economics.py –≤ —Ñ—É–Ω–∫—Ü–∏–∏ __statistics: {e}')


def setup(bot):
    bot.add_cog(Economics(bot))
