import random

import discord
from discord.ext import commands

import config
from Database import Database


async def roles_update(guild):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç"""

    basic_roles = config.basic_roles  # –ü–æ–ª—É—á–∞–µ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ —Ä–æ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä–æ–ª–µ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ guild

    required_roles = []
    # –ò—Ç–µ—Ä–∏—Ä—É–µ–º—Å—è –ø–æ —Å–ª–æ–≤–∞—Ä—é —Å —Ä–æ–ª—è–º–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    for name, color in basic_roles.items():

        role = discord.utils.get(guild.roles, name=name)  # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å

        # –ï—Å–ª–∏ —Ä–æ–ª–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
        if role is None:
            role = await guild.create_role(name=name, colour=discord.Colour.from_rgb(*color), hoist=True)
            print(f'Created new role "{name}" at {guild.name}')

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –≤ —Å–ø–∏—Å–æ–∫ —Ä–æ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ç–æ–º –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if name == 'Radiant' or name == 'Dire' or name == 'Neutral':
            required_roles.append(role)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ—Ç—É –æ–¥–Ω–æ–π –∏–∑, –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–Ω–¥–æ–º–Ω—É—é
    for user in guild.members:
        if len(list(set(required_roles) & set(user.roles))) == 0:
            await user.add_roles(random.choice(required_roles))


# def database_update(database: Database, users) -> None:
#     """–í—ã–ø–æ–ª–Ω—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
#     for user in users:
#         try:
#             database.add_user(user=user, cash=50)
#         except Exception as e:
#             print(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ database_update: {e}')


class Events(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_ready(self):
        """–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞"""
        print(f'–ë–æ—Ç {self.bot.user} –∑–∞–ø—É—â–µ–Ω!')
        db = Database()
        db.update(self.bot.guilds)
        db.close_connection()
        print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')
        for guild in self.bot.guilds:
            await roles_update(guild)
            print(f'–†–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild} –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')

    @commands.Cog.listener()
    async def on_application_command_error(self, ctx, error):
        """–õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ —Ä–∞–∑–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"""

        # Application command on cooldown
        if isinstance(error, commands.errors.CommandOnCooldown):
            days = error.retry_after // (24 * 3600)
            hour = (error.retry_after % (24 * 3600)) // 3600
            minute = ((error.retry_after % (24 * 3600)) % 3600) // 60
            seconds = round((((error.retry_after % (24 * 3600)) % 3600) % 60), 2)

            await ctx.respond(f'**–ö—É–ª–¥–∞—É–Ω {int(days)}–¥. {int(hour)}—á. {int(minute)}–º. {int(seconds)}—Å.**',
                              ephemeral=True)

        # Permission denied
        elif isinstance(error, commands.errors.NotOwner):
            await ctx.respond(f'–£ –≤–∞—Å **–Ω–µ—Ç –ø—Ä–∞–≤** –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã! ü§°', ephemeral=True)

        # –ü—Ä–æ—á–∏–µ –æ—à–∏–±–∫–∏
        else:
            print(f'–û—à–∏–±–∫–∞: {error}')

    @commands.Cog.listener()
    async def on_guild_join(self, guild):
        print(f'–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É {guild}')
        db = Database()
        db.update([guild])
        db.close_connection()
        print(f'–°–µ—Ä–≤–µ—Ä {guild} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î')
        await roles_update(guild)
        print(f'–†–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {guild} –æ–±–Ω–æ–≤–ª–µ–Ω—ã!')

    @commands.Cog.listener()
    async def on_member_join(self, member):
        """–î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î"""
        guild = member.guild
        print(f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member} –ø—Ä–∏–±—ã–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild}')
        db = Database()
        db.add_user(guild, member)
        db.close_connection()
        # print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')
        await roles_update(guild)
        print(f'–†–æ–ª—å {member} –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')

    @commands.Cog.listener()
    async def on_member_remove(self, member):
        """–£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î"""
        guild = member.guild
        print(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {member} –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä {guild}')
        db = Database()
        db.remove_user(guild, member)
        db.close_connection()
        # print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞!')


def setup(bot):
    bot.add_cog(Events(bot))
